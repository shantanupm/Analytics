<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jdbc  http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.0.xsd">
   <!-- change the spring-security to 3.1xsd -->


<http auto-config="true" use-expressions="true" access-denied-page="/WEB-INF/jsp/noPermission.jsp">
		<logout logout-success-url="/user/login.html" />
       <intercept-url pattern="/index.htm" filters="none" />     
        <intercept-url pattern="/user/login.html" filters="none" />
        <intercept-url pattern="/rservice/**/rservice.html" filters="none" />
        <intercept-url pattern="/get/messagecount/**" filters="none" />        
        <intercept-url pattern="/js/**" filters="none" />
        <intercept-url pattern="/css/**" filters="none" />
        <intercept-url pattern="/images/**" filters="none"/>
		<intercept-url pattern="/swf/**" filters="none"/>
		<intercept-url pattern="/static/**" filters="none" />
		<intercept-url pattern="/services/**" filters="none" />
		<intercept-url pattern="/*.wsdl" filters="none" />
		<intercept-url pattern="/institution/*" access="isAuthenticated()" />
		<intercept-url pattern="/course/*" access="isAuthenticated()" /> 
		<intercept-url pattern="/evaluation/ieManager.html*" access="hasAnyRole('IEM','Administrator','IE')" />
		<intercept-url pattern="/evaluation/quality.html*" access="hasAnyRole('IE','IEM','Administrator')" />
		<intercept-url pattern="/evaluation/studentEvaluator.html*" access="hasAnyRole('SLE','LOPES','Administrator')" />
		<intercept-url pattern="/evaluation/launchEvaluation.html*" access="hasAnyRole('IE','DEO','LOPES','SLE','Administrator')" />
		<intercept-url pattern="/evaluation/admin.html*" access="hasRole('Administrator')" />
		<intercept-url pattern="/user/user.html*" access="hasRole('Administrator')" />
       
         <form-login login-page="/user/login.html" authentication-success-handler-ref="authenticationHandler" authentication-failure-url="/user/login.html?showError=1"/>
         <logout invalidate-session="true" />   
         <custom-filter position="PRE_AUTH_FILTER" ref="ssAuthenticationFilter"/>     
        <session-management >
            <concurrency-control max-sessions="5" error-if-maximum-exceeded="true" expired-url="/user/login.html"/>
        </session-management>
    </http>

	<beans:bean id="lcsDBauthenticationProvider"
		class="com.ss.user.security.SSDaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="dbUserService" />
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="lcsDBauthenticationProvider" />
		<authentication-provider ref="preAuthProvider" />
	</authentication-manager>
	
	<!-- <authentication-manager alias="authenticationManager">
		<authentication-provider ref="adAuthenticationProvider" />
		<authentication-provider ref="preAuthProvider" />
	</authentication-manager> -->
	

	<beans:bean class="com.ss.user.security.SSUserDetailsServiceImpl"
		id="dbUserService" />


	<beans:bean id="ssAuthenticationFilter"
		class="com.ss.user.security.SSRequestParameterAuthenticationFilter">
		<beans:property name="exceptionIfParameterIsMissing"
			value="false" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>
	<beans:bean id="preAuthProvider"
		class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<beans:property name="preAuthenticatedUserDetailsService">
			<beans:bean id="userDetailsServiceWrapper"
				class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<beans:property name="userDetailsService" ref="dbUserService" />
			</beans:bean>
		</beans:property>
	</beans:bean>

	<!-- LDAP Configuration -->
	<!-- <beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource"> 
		<beans:constructor-arg value="ldap://127.0.0.1:389/dc=gcu,dc=edu" /> <beans:property 
		name="userDn" value="cn=root, dc=gcu, dc=edu" /> <beans:property name="password" 
		value="avinash" /> </beans:bean> <beans:bean id="ldapAuthProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider"> 
		<beans:constructor-arg> <beans:bean class="org.springframework.security.ldap.authentication.BindAuthenticator"> 
		<beans:constructor-arg ref="contextSource" /> <beans:property name="userDnPatterns"> 
		<beans:list> <beans:value>uid={0},ou=people</beans:value> </beans:list> </beans:property> 
		</beans:bean> </beans:constructor-arg> <beans:constructor-arg> <beans:bean 
		class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator"> 
		<beans:constructor-arg ref="contextSource" /> <beans:constructor-arg value="ou=groups" 
		/> <beans:property name="groupRoleAttribute" value="ou" /> </beans:bean> 
		</beans:constructor-arg> </beans:bean> -->

	<!-- ActiveDirectory -->

	<!-- <beans:bean id="adAuthenticationProvider"
		class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
		<beans:constructor-arg value="canyon.com" />
		<beans:constructor-arg value="ldap://GCUDC02.canyon.com:3268/" />
		<beans:property name="useAuthenticationRequestCredentials"
			value="true" />
		<beans:property name="convertSubErrorCodesToExceptions"
			value="true" />
	</beans:bean>
 -->

	 

</beans:beans>	