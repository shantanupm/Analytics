<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd   
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd">



	<broker xmlns="http://activemq.apache.org/schema/core"
		brokerName="GCU-TEA" useJmx="true" dataDirectory="data" persistent="true">

		<!-- Destination specific policies using destination names or wildcards -->
		<destinationPolicy>
			<policyMap>
				<policyEntries>
					<policyEntry queue=">" memoryLimit="50mb"
						producerFlowControl="false">
						<dispatchPolicy>
							<strictOrderDispatchPolicy />
						</dispatchPolicy>
						<deadLetterStrategy>
							<individualDeadLetterStrategy
								queuePrefix="DLQ." useQueueForQueueMessages="true"/>
						</deadLetterStrategy>
					</policyEntry>
				</policyEntries>
			</policyMap>
		</destinationPolicy>

		<plugins>
			<loggingBrokerPlugin />
		</plugins>

		<!-- Use the following to configure how ActiveMQ is exposed in JMX -->
		<managementContext>
			<managementContext createConnector="false"
				connectorPort="9696" />
		</managementContext>

		<!-- using Journal -->
		<persistenceAdapter>
			<!-- <jdbcPersistenceAdapter cleanupPeriod="3600000"
				dataSource="#sqlserver-ds" createTablesOnStartup="false" /> -->
				 <amqPersistenceAdapter maxFileLength="32mb"/>
		</persistenceAdapter>

		<!-- The maximum amount of space the broker will use before slowing down 
			producers -->
		<systemUsage>
			<systemUsage>
				<memoryUsage>
					<memoryUsage limit="100 mb" />
				</memoryUsage>
				<storeUsage>
					<storeUsage limit="100 mb" />
				</storeUsage>
				<tempUsage>
					<tempUsage limit="100 mb" />
				</tempUsage>
			</systemUsage>
		</systemUsage>

		<!-- The transport connectors ActiveMQ will listen to -->
		<transportConnectors>
			<transportConnector name="vmlocalhost"
				uri="vm://localhost:61616?maximumConnections=200" />
		</transportConnectors>

	</broker>

	<bean id="sqlserver-ds" class="net.sourceforge.jtds.jdbcx.JtdsDataSource">
		<property name="serverName" value="10.254.93.16" />
		<property name="portNumber" value="1433" />
		<property name="databaseName" value="scheduling_dev" />
		<property name="user" value="avinash" />
		<property name="password" value="avinash" />
	</bean>

	<bean id="amqJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="sqlserver-ds" />
	</bean>

	<bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
		<property name="locateExistingServerIfPossible" value="true" />
	</bean>

	<bean id="exporter"
		class="org.springframework.jmx.export.annotation.AnnotationMBeanExporter">
		<property name="server" ref="mbeanServer" />
		<property name="defaultDomain" value="edu.gcu" />
	</bean>

	<!-- <bean id="messageLogDAOTarget" class="com.apollo.camel.wiretap.MessageLogDAO"> 
		<property name="jdbcTemplate" ref="amqJdbcTemplate" /> </bean> <bean id="messageLogListener" 
		class="com.apollo.camel.wiretap.MessageLogListener"> <property name="messageLogDAO" 
		ref="messageLogDAO" /> </bean> -->

	<bean id="jdbcTxManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="sqlserver-ds" />
	</bean>

	<!-- <bean id="baseTxProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" 
		abstract="true"> <property name="proxyTargetClass" value="true" /> <property 
		name="transactionManager" ref="jdbcTxManager" /> <property name="transactionAttributes"> 
		<props> <prop key="insert*">PROPAGATION_REQUIRED</prop> <prop key="add*">PROPAGATION_REQUIRED</prop> 
		<prop key="update*">PROPAGATION_REQUIRED</prop> <prop key="remove*">PROPAGATION_REQUIRED</prop> 
		</props> </property> </bean> <bean id="messageLogDAO" parent="baseTxProxy"> 
		<property name="target" ref="messageLogDAOTarget" /> </bean> -->

	<!-- ActiveMQ local -->
	<bean id="jmsMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL"
			value="vm://localhost:61616?create=false&amp;waitForStart=10000&amp;jms.prefetchPolicy.queuePrefetch=0" />
	</bean>

	<bean id="pooledJmsConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory" ref="jmsMQConnectionFactory" />
	</bean>

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsMQConnectionFactory" />
	</bean>

	<!-- Configure the Spring framework to use JMS transactions, with 15 min 
		timeout -->
	<bean id="jmsTransactionManager"
		class="org.springframework.jms.connection.JmsTransactionManager">
		<property name="connectionFactory" ref="jmsMQConnectionFactory" />
		<property name="defaultTimeout" value="900" />
	</bean>

	<!-- <bean id="PROPAGATION_REQUIRED" class="org.apache.camel.spring.spi.SpringTransactionPolicy"> 
		<constructor-arg ref="template" /> </bean> -->
	<bean id="template"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="jmsTransactionManager" />
	</bean>
	
	 <!-- <bean id="teaMessagePublisher"
            class="org.apache.activemq.book.ch7.spring.SpringPublisher">
            <property name="template" ref="jmsTemplate" />
            <property name="destinations">
              <list>
                <ref local="sendToCampusVue" />
              </list>
            </property>
</bean> -->

	<!-- Queues -->

	<bean id="sendToCampusVue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="SendToCampusVue" />
	</bean>
	
	<bean id="myMsgContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
     <property name="connectionFactory" ref="pooledJmsConnectionFactory"></property>
     <property name="destination" ref="sendToCampusVue"></property>
     <property name="messageListener" ref="sendToCampusVueMessageListener"></property>
     <property name="sessionTransacted" value="true"/>
     <property name="sessionAcknowledgeMode" value="2"/>
</bean>

 <bean id="sendToCampusVueMessageListener" class="com.ss.messaging.SendToCampusVueMessageListener"/>
 
	
</beans>
